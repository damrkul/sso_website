<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class app extends CI_Controller {

 function __construct()
   {
       parent::__construct();
       $this->load->helper('cookie');
       $this->load->helper('url');
        $this->load->library('session');
   
        

        if ( $this->session->token == NULL ) {
            if  (empty( $this->input->get("token"))  ) 
            {
            redirect("http://161.35.178.32:8888/check_login?url=https://www.rekous.com/", 'refresh');
              } 

        }

   
        if (empty( $this->input->get("token")))  {
            $this->session->set_userdata('token', 'invalid');
        } else {
            $this->session->set_userdata('token', $this->input->get("token"));
        }
        
   }


	/**
	 * Index Page for this controller.
	 *
	 * Maps to the following URL
	 * 		http://example.com/index.php/welcome
	 *	- or -
	 * 		http://example.com/index.php/welcome/index
	 *	- or -
	 * Since this controller is set as the default controller in
	 * config/routes.php, it's displayed at http://example.com/
	 *
	 * So any other public methods not prefixed with an underscore will
	 * map to /index.php/welcome/<method_name>
	 * @see https://codeigniter.com/user_guide/general/urls.html
	 */
	public function index()
	{
		$this->load->view('index');

	}

    public function login()
    {
        $this->load->view('login');
    }
    public function register()
    {
        $this->load->view('register');
    }
    public function logout()
    {
    
        $url = "http://161.35.178.32:8888/logout";
        $this->session->sess_destroy();
        
        redirect($url. "?url=http://www.rekous.com", 'refresh');
    }
    
  


    private  function getRequest($url)
    {
        /* API URL */
        $curl = curl_init();
        curl_setopt_array($curl, [
            CURLOPT_RETURNTRANSFER => 1,
            CURLOPT_URL => $url,
        ]);
        // Send the request & save response to $resp
        $resp = curl_exec($curl);
        // Close request to clear up some resources
        curl_close($curl);
        return $resp;
    }

    private  function postRequest($url,$data)
    {
    $curl = curl_init();
    // Set some options - we are passing in a useragent too here
    curl_setopt_array($curl, [
        CURLOPT_RETURNTRANSFER => 1,
        CURLOPT_URL => $url,
        CURLOPT_POST => 1,
        CURLOPT_POSTFIELDS => $data
    ]);
    // Send the request & save response to $resp
    $resp = curl_exec($curl);
    // Close request to clear up some resources
    curl_close($curl);
        return $resp;
    }

    public function getuserinfo() {
        $url = 'http://161.35.178.32:8888/getuserinfo';
        $data = array( "token" => $this->session->token);
        var_dump($data);
        echo $this->postRequest($url,$data);
    }



    public function test() {
        $url = 'http://161.35.178.32:8888/users';
        echo $this->getRequest($url);
    }

}

